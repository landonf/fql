package fql.examples;

public class SigmaExample extends Example {

	@Override
	public String getName() {
		return "Sigma";
	}

	@Override
	public String getText() {
		return s;
	}
	
	public static final String s = 
			"schema C = {"
					+ "\n nodes"
					+ "\n 	a1, a2, a3, b1, b2, c1, c2, c3, c4;"
					+ "\n 	"
					+ "\n attributes;"
					+ "\n "
					+ "\n arrows"
					+ "\n	g1 : a1 -> b1, "
					+ "\n	g2 : a2 -> b2, "
					+ "\n	g3 : a3 -> b2,"
					+ "\n	h1 : a1 -> c1, "
					+ "\n 	h2 : a2 -> c2, "
					+ "\n 	h3 : a3 -> c4;"
					+ "\n 	"
					+ "\n equations;"
					+ "\n}"
					+ "\n"
					+ "\nschema D = {"
					+ "\n nodes"
					+ "\n 	A, B, C;"
					+ "\n 	"
					+ "\n attributes;"
					+ "\n "
					+ "\n arrows"
					+ "\n	G : A -> B, "
					+ "\n	H : A -> C;"
					+ "\n	"
					+ "\n equations;"
					+ "\n}"
					+ "\n"
					+ "\nmapping F : C -> D = {"
					+ "\n nodes"
					+ "\n	a1 -> A, "
					+ "\n	a2 -> A, "
					+ "\n	a3 -> A,"
					+ "\n  	b1 -> B, "
					+ "\n  	b2 -> B, "
					+ "\n  	c1 -> C, "
					+ "\n  	c2 -> C, "
					+ "\n  	c3 -> C, "
					+ "\n  	c4 -> C;"
					+ "\n  	"
					+ "\n attributes;"
					+ "\n "
					+ "\n arrows "
					+ "\n  g1 -> A.G, "
					+ "\n  g2 -> A.G, "
					+ "\n  g3 -> A.G,"
					+ "\n  h1 -> A.H, "
					+ "\n  h2 -> A.H, "
					+ "\n  h3 -> A.H;"
					+ "\n} C D"
					+ "\n"
					+ "\n"
					+ "\ninstance I : C = {"
					+ "\n nodes"
					+ "\n	b2 -> {a,b,c},"
					+ "\n 	b1 -> {d,e},"
					+ "\n "
					+ "\n 	a3 -> {1,2},"
					+ "\n 	a2 -> {3,4,5},"
					+ "\n 	a1 -> {6},"
					+ "\n"
					+ "\n 	c4 -> {f,g},"
					+ "\n 	c3 -> {h},"
					+ "\n 	c2 -> {i,j},"
					+ "\n 	c1 -> {k,l};"
					+ "\n"
					+ "\n attributes;"
					+ "\n"
					+ "\n arrows "
					+ "\n 	g3 -> {(1,a),(2,b)},"
					+ "\n 	g2 -> {(3,a),(4,b),(5,c)},"
					+ "\n 	g1 -> {(6,d)},"
					+ "\n "
					+ "\n 	h3 -> {(1,f),(2,g)},"
					+ "\n 	h2 -> {(3,i),(4,j),(5,j)},"
					+ "\n 	h1 -> {(6,k)};"
					+ "\n} C"
					+ "\n"
					+ "\ninstance J : D = sigma F I";

}
